name: Node.js CI

on:
  push:
    branches: [ "main", "release" ]
  pull_request:
    branches: [ "main", "release" ]

jobs:
  build:
    name: Build on ${{ matrix.os }} Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [18, 20, 22]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load GitHub token
        run: echo "NODE_PRE_GYP_GITHUB_TOKEN=${{ secrets.NODE_PRE_GYP_GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get version from package.json
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get version from package.json (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          $VERSION = node -p "require('./package.json').version"
          Add-Content -Path $env:GITHUB_ENV -Value "PACKAGE_VERSION=$VERSION"

      - name: Install microsoft/setup-msbuild
        if: ${{ matrix.os == 'windows-latest' }}
        uses: microsoft/setup-msbuild@v2

      - name: Install dependencies and build from source
        run: npm install --build-from-source

      - name: Run tests
        run: npm test

      - name: Run example
        run: node example.js

      - name: Package binary
        run: ./node_modules/.bin/node-pre-gyp package
        shell: bash

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-node${{ matrix.node-version }}
          path: build/stage/**/*

  publish:
    name: Merge and Publish Binaries
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get package version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create or ensure release exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v$PACKAGE_VERSION"
          if gh release view "$TAG"; then
            echo "Release $TAG already exists"
          else
            gh release create "$TAG" -t "$TAG" -n "Auto-published binaries for $TAG"
          fi

      - name: Upload binaries to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v$PACKAGE_VERSION"
          find ./artifacts -type f -exec gh release upload "$TAG" {} \;